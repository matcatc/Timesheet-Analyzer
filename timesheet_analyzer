#!/bin/bash
# 
# This is the main Timesheet Analyzer program, which coordinates the other
# components.
#
# Author: Matthew Todd
# Date: 2017-09-16
#
# TODO: switch to /bin/sh in future?
# TODO: paths?
# TODO: rewrite in Haskell (and call TimesheetAnalyzerComp directly in Haskell)?

# add directory in which this .sh file exists to $PATH so that we can call the
# other parts if they're in the same directory and this script is called via
# a relative path.
# TODO: decide whether to keep this depending on how we package/install Timesheet Analyzer
_script="$(readlink -f ${BASH_SOURCE[0]})"
_base="$(dirname $_script)"
PATH="${PATH}:${_base}"


# TODO: Delete When Done Debugging
PATH="${PATH}:./_build/"

# Run timesheet analyzer to generate intermediate_timesheet.csv
echo "Analyzing Timesheets..."
TimesheetAnalyzerComp $*

# TODO: how to avoid continuing below if above command didn't actually process any files?
# Exit codes works partly, but doesn't help for situation like "--help" option
# was passed (because then cmdArgs will return 0).

# Generate the graphs in the local directory
echo "Generating graphs..."
# TODO: provide a way to allow user to select the directory?
#gnuplot -c graph.gnuplot ./intermediate_timesheet.csv ./
# TODO: Delete When Done Debugging
gnuplot -c graph.gnuplot ./intermediate_timesheet.csv ./test/


# Generate a HTML report
echo "Generating HTML report..."
asciidoctor report.asciidoc

# Generate a PDF report
echo "Generating PDF report..."
asciidoctor-pdf report.asciidoc


echo "Done."

